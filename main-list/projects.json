{
  "$schema": "./projects-schema.json",
  "projects": [
    {
      "description": "Gyselalib++ is a collection of C++ components for writing gyrokinetic semi-lagrangian codes.",
      "discussion": "https://github.com/gyselax/gyselalibxx/issues",
      "documentation": "https://gyselax.github.io/gyselalibxx/",
      "guix_package": "https://gitlab.inria.fr/guix-hpc/guix-hpc/-/blob/master/guix-hpc/packages/gysela.scm",
      "name": "Gyselalib++"
    },
    {
      "description": "Feel++ is an Open-Source C++ library which allows to solve a large range of partial\ndifferential equations using Galerkin methods, e.g. finite element method, spectral\nelement method, discontinuous Galerkin methods or reduced basis methods. Feel++ enables\nparallel computing in a seamless way and allows to solve large scale systems up to tens\nof thousands of cores.\n",
      "discussion": "https://join.slack.com/t/feelpp/shared_invite/zt-2qe0q9hw-4pVbhohCXUE6Po9Ma8dbiQ",
      "documentation": "https://docs.feelpp.org/home/index.html",
      "name": "Feel++",
      "spack_package": "https://github.com/numpex/spack.numpex/blob/main/packages/feelpp/package.py"
    },
    {
      "description": "BigDFT is a free software package, whose main program allows the total energy, charge density,\nand electronic structure of systems made of electrons and nuclei (molecules and periodic/crystalline\nsolids) to be calculated within density functional theory (DFT), using pseudopotentials, and a\nwavelet basis.\n",
      "discussion": "https://bigdft.org/index.html%3Fp=41.html",
      "documentation": "https://l_sim.gitlab.io/bigdft-suite/index.html",
      "guix_package": "https://gitlab.inria.fr/guix-hpc/guix-hpc/-/blob/master/guix-hpc/packages/chemistry.scm",
      "name": "BigDFT",
      "spack_package": "https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/bigdft-suite/package.py"
    },
    {
      "description": "Chameleon is a dense linear algebra solver relying on sequential task-based algorithms where\nsub-tasks of the overall algorithms are submitted to a run-time system. Such a system is a layer\nbetween the application and the hardware which handles the scheduling and the effective execution\nof tasks on the processing units. A run-time system such as StarPU is able to manage automatically\ndata transfers between not shared memory area (CPUs-GPUs, distributed nodes).\n",
      "discussion": "https://gitlab.inria.fr/solverstack/chameleon/-/issues",
      "documentation": "https://solverstack.gitlabpages.inria.fr/chameleon/",
      "guix_package": "https://gitlab.inria.fr/guix-hpc/guix-hpc/-/blob/master/guix-hpc/packages/solverstack.scm",
      "name": "Chameleon",
      "spack_package": "https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/chameleon/package.py"
    },
    {
      "description": "PDI supports loose coupling of simulation codes with data handling\nthe simulation code is annotated in a library-agnostic way,\nlibraries are used from the specification tree.\n",
      "discussion": "https://join.slack.pdi.dev/",
      "documentation": "https://pdi.dev/main/",
      "guix_package": "https://gitlab.inria.fr/guix-hpc/guix-hpc/-/blob/master/guix-hpc/packages/pdi.scm",
      "name": "PDI",
      "spack_package": "https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/pdi/package.py"
    },
    {
      "description": "Melissa is a file-avoiding, adaptive, fault-tolerant and elastic\nframework, to run large-scale sensitivity analysis or deep-surrogate\ntraining on supercomputers.\n",
      "discussion": "https://melissa.discourse.group/",
      "documentation": "https://melissa.gitlabpages.inria.fr/melissa/",
      "guix_package": "https://gitlab.inria.fr/guix-hpc/guix-hpc/-/blob/master/guix-hpc/packages/melissa.scm",
      "name": "Melissa",
      "spack_package": "https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/melissa/package.py"
    },
    {
      "description": "FreeFEM is a popular 2D and 3D partial differential equations (PDE) solver.\nIt allows you to easily implement your own physics modules using the provided\nFreeFEM language. FreeFEM offers a large list of finite elements, like the\nLagrange, Taylor-Hood, etc., usable in the continuous and discontinuous\nGalerkin method framework.\n",
      "discussion": "https://community.freefem.org/",
      "documentation": "https://doc.freefem.org/introduction/index.html",
      "guix_package": "https://gitlab.inria.fr/guix-hpc/guix-hpc/-/blob/master/guix-hpc/packages/math.scm",
      "name": "FreeFEM++",
      "spack_package": "https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/freefem/package.py"
    },
    {
      "description": "StarPU is a task-based runtime system for heterogeneous platforms\ncoupling a performance modeling scheduler with a distributed\nshared-memory manager. It provides a framework for task scheduling\non heterogeneous, accelerated platforms, together with an API for\nimplementing various classes of scheduling algorithms. This\nscheduling framework jointly works with a distributed shared-memory\nmanager to optimize task mappings and data transfers, and to overlap\ncommunications with computations.\n",
      "discussion": "https://gitlab.inria.fr/starpu/starpu/-/issues",
      "documentation": "https://starpu.gitlabpages.inria.fr/",
      "guix_package": "https://gitlab.inria.fr/guix-hpc/guix-hpc/-/blob/master/inria/storm.scm",
      "name": "StarPU",
      "spack_package": "https://github.com/spack/spack/blob/develop/var/spack/repos/builtin/packages/starpu/package.py"
    }
  ]
}
